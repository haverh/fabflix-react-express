{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\straw\\\\Desktop\\\\personal\\\\fabflix-remake\\\\front-end\\\\src\\\\components\\\\top-movies\\\\top-movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './top-movies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopMovies() {\n  _s();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/data');\n      const jsonData = await response.json();\n      // console.log(jsonData)\n      setRows(jsonData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table table-striped\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Release Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Director\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Stars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.movieTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.movieYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.movieDirector\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.movieGenres.map((gObj, gIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: gObj.genreName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), gIndex < item.movieGenres.length - 1 && ', ']\n          }, gIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.movieStars.map((sObj, sIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: sObj.starName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), sIndex < item.movieStars.length - 1 && ', ']\n          }, sIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [item.movieRating, /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-sharp fa-solid fa-star\",\n            style: \"color: #ffd747;\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(TopMovies, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = TopMovies;\nexport default TopMovies;\nvar _c;\n$RefreshReg$(_c, \"TopMovies\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TopMovies","_s","rows","setRows","fetchData","response","fetch","jsonData","json","error","console","className","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","movieTitle","movieYear","movieDirector","movieGenres","gObj","gIndex","Fragment","href","genreName","length","movieStars","sObj","sIndex","starName","movieRating","style","_c","$RefreshReg$"],"sources":["C:/Users/straw/Desktop/personal/fabflix-remake/front-end/src/components/top-movies/top-movies.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './top-movies.css';\r\n\r\nfunction TopMovies() {\r\n\r\n    const [rows, setRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/data');\r\n            const jsonData = await response.json();\r\n            // console.log(jsonData)\r\n            setRows(jsonData);\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <table className=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\" >Title</th>\r\n                <th scope=\"col\" >Release Year</th>\r\n                <th scope=\"col\" >Director</th>\r\n                <th scope=\"col\" >Genres</th>\r\n                <th scope=\"col\" >Stars</th>\r\n                <th scope=\"col\" >Rating</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows.map((item, index) => (\r\n                <tr key={index}>\r\n                    <td>{item.movieTitle}</td>\r\n                    <td>{item.movieYear}</td>\r\n                    <td>{item.movieDirector}</td>\r\n                    <td>\r\n                        {item.movieGenres.map((gObj, gIndex) => (\r\n                        <React.Fragment key={gIndex}>\r\n                            <a href=\"#\">{gObj.genreName}</a>\r\n                            {gIndex < item.movieGenres.length - 1 && ', '}\r\n                        </React.Fragment>\r\n                        ))}\r\n                    </td>\r\n                    <td>\r\n                        {item.movieStars.map((sObj, sIndex) => (\r\n                        <React.Fragment key={sIndex}>\r\n                            <a href=\"#\">{sObj.starName}</a>\r\n                            {sIndex < item.movieStars.length - 1 && ', '}\r\n                        </React.Fragment>\r\n                        ))}\r\n                    </td>\r\n                    <td>{item.movieRating}\r\n                    <i className='fa-sharp fa-solid fa-star' style='color: #ffd747;'></i></td>\r\n\r\n                </tr>\r\n                ))}\r\n            </tbody>\r\n            </table>\r\n    )\r\n}\r\n\r\nexport default TopMovies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}