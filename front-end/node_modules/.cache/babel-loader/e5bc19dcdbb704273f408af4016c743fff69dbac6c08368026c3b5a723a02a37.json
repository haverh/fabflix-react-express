{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\straw\\\\Desktop\\\\personal\\\\fabflix-remake\\\\front-end\\\\src\\\\components\\\\checkout\\\\checkout-success.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport './checkout-success.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutSuccess = () => {\n  _s();\n  const {\n    user\n  } = useAuth0();\n  const cart = JSON.parse(localStorage.getItem('cart'));\n  const tax = JSON.parse(localStorage.getItem('tax'));\n  const total = JSON.parse(localStorage.getItem('total'));\n  const grandTotal = parseFloat((total + tax).toFixed(2));\n  const email = user === null || user === void 0 ? void 0 : user.email;\n  const date = new Date().toISOString().slice(0, 10);\n  // console.log(date)\n  console.log(email);\n  const documentOrder = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/sale`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cart,\n          tax,\n          total,\n          grandTotal,\n          email,\n          date\n        })\n      });\n      const jsonData = await response.json();\n      console.log(jsonData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  if (email != undefined && email != null) {\n    console.log(\"fetch\");\n    documentOrder();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckoutSuccess, \"0/moGN6fHOQfmda34xtpR7VuMpE=\", false, function () {\n  return [useAuth0];\n});\n_c = CheckoutSuccess;\nexport default CheckoutSuccess;\nvar _c;\n$RefreshReg$(_c, \"CheckoutSuccess\");","map":{"version":3,"names":["useContext","useAuth0","jsxDEV","_jsxDEV","CheckoutSuccess","_s","user","cart","JSON","parse","localStorage","getItem","tax","total","grandTotal","parseFloat","toFixed","email","date","Date","toISOString","slice","console","log","documentOrder","response","fetch","method","headers","body","stringify","jsonData","json","error","undefined","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/straw/Desktop/personal/fabflix-remake/front-end/src/components/checkout/checkout-success.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport './checkout-success.css';\r\n\r\nconst CheckoutSuccess = () => {\r\n\r\n    const { user } = useAuth0();\r\n\r\n    const cart = JSON.parse(localStorage.getItem('cart'));\r\n    const tax = JSON.parse(localStorage.getItem('tax'));\r\n    const total = JSON.parse(localStorage.getItem('total'));\r\n    const grandTotal = parseFloat((total + tax).toFixed(2));\r\n    const email = user?.email;\r\n    const date = new Date().toISOString().slice(0,10);\r\n    // console.log(date)\r\n    console.log(email)\r\n\r\n    const documentOrder = async () => {\r\n        try {\r\n\r\n            const response = await fetch(`http://localhost:5000/sale`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({cart, tax, total, grandTotal, email, date}),\r\n            });\r\n            const jsonData = await response.json();\r\n            console.log(jsonData) \r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n\r\n    if ( email != undefined && email != null ) { \r\n        console.log(\"fetch\")\r\n        documentOrder();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='outerContainer'>\r\n            {/* <h3 className='gratitude'>Thank you for your order</h3>\r\n            <div className='saleInfo'>\r\n                <>Order #: {}</>\r\n                <br></br>\r\n                <div className='customerDetais'>\r\n                    <h4>Customer Details</h4>\r\n                    <><b>Email:</b> {email}</>\r\n                </div>\r\n                <br></br>\r\n                <div className='orderDetails'>\r\n                    <h4>Order Details</h4>\r\n                    <div className='order'>\r\n                        <div className='orderRow'>\r\n                            <div className='product'><b>Product</b></div>\r\n                            <div className='quantity'><b>Quantity</b></div>\r\n                            <div className='price'><b>Price</b></div>\r\n                            <div className='total'><b>Total</b></div>\r\n                        </div>\r\n                        {cart.map((item) => (\r\n                            <div className='orderRow' key={item.id}>\r\n                                <div className='product'>{item.title}</div>\r\n                                <div className='quantity'>{item.quantity}</div>\r\n                                <div className='price'>${item.price}</div>\r\n                                <div className='total'>${(parseFloat(item.price) * parseInt(item.quantity)).toFixed(2)}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='paymentDetails'>\r\n                        <h4>Payment Details</h4>\r\n                        <div className='paymentRow'>\r\n                            <div className='payment-type'><b>Sub-Total:</b></div>\r\n                            <div className='payment-amount'>${total.toFixed(2)}</div>\r\n                        </div>\r\n                        <div className='paymentRow'>\r\n                            <div className='payment-type'><b>Sales Tax:</b></div>\r\n                            <div className='payment-amount'>${tax}</div>\r\n                        </div>\r\n                        <div className='paymentRow'>\r\n                            <div className='payment-type'><b>Grand Total:</b></div>\r\n                            <div className='payment-amount'>${grandTotal}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n                    {/* <table className=\"cart-items table\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                            <th scope=\"col\" >Title</th>\r\n                            <th scope=\"col\" >Price</th>\r\n                            <th scope=\"col\" >Quantity</th>\r\n                            <th scope=\"col\" >Total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {cart.map((item) => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.title}</td>\r\n                                <td>${item.price}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>${(parseFloat(item.price) * parseInt(item.quantity)).toFixed(2)}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className='cart-bottom'>\r\n                    <div className='cart-checkout'>\r\n                        <div className='cart-total'>\r\n                            <p><b>Sub-Total:</b>  ${total.toFixed(2)}</p>\r\n                            <p><b>Sales Tax:</b> ${tax}</p>\r\n                            <p><b>Grand Total:</b> ${grandTotal}</p>\r\n                        </div>\r\n                    </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSuccess;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM;IAAEC;EAAK,CAAC,GAAGL,QAAQ,CAAC,CAAC;EAE3B,MAAMM,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAMC,GAAG,GAAGJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC;EACnD,MAAME,KAAK,GAAGL,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvD,MAAMG,UAAU,GAAGC,UAAU,CAAC,CAACF,KAAK,GAAGD,GAAG,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC;EACvD,MAAMC,KAAK,GAAGX,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,KAAK;EACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;EACjD;EACAC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EAElB,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4BAA2B,EAAE;QACvDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAErB,IAAI,CAACsB,SAAS,CAAC;UAACvB,IAAI;UAAEK,GAAG;UAAEC,KAAK;UAAEC,UAAU;UAAEG,KAAK;UAAEC;QAAI,CAAC;MACpE,CAAC,CAAC;MACF,MAAMa,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACtCV,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,IAAKhB,KAAK,IAAIiB,SAAS,IAAIjB,KAAK,IAAI,IAAI,EAAG;IACvCK,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBC,aAAa,CAAC,CAAC;EACnB;EAEA,oBAEIrB,OAAA;IAAKgC,SAAS,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA0E1B,CAAC;AAEd,CAAC;AAAAlC,EAAA,CAjHKD,eAAe;EAAA,QAEAH,QAAQ;AAAA;AAAAuC,EAAA,GAFvBpC,eAAe;AAmHrB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}