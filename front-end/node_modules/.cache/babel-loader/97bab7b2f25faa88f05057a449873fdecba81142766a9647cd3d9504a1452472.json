{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, createContext } from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport Login from './components/signin/signin';\nimport TopMovies from './components/top-movies/top-movies';\nimport Navbar from './components/navbar/navbar';\nimport SingleMovie from './components/single-movie/single-movie';\nimport SingleStar from './components/single-star/single-star';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nconst SessionContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [mySession, setSession] = useState({});\n  // const navigate = useNavigate();\n\n  Axios.defaults.withCredentials = true;\n\n  // useEffect(() => {\n  //     Axios.get(\"http://localhost:5000/api/login\")\n  // \t.then( (res) => {\n  // \t\tif ( res.data.signedIn ) {\n  // \t\t\tsetSession(res.data);\n  // \t\t\t// window.location.href = \"/top-movies\";\n  // \t\t\tconsole.log(`YOU ARE SIGNED IN WITH ${res.data.user.email}`);\n  // \t\t} else {\n  // \t\t\tconsole.log(\"NOT SIGNED IN\");\n  // \t\t}\n  //     })\n  // }, []);\n\n  // const ProtectedRoute = ({ component: Component, ...rest }) => {\n  // \tif (!mySession.signedIn) {\n  // \t\tconsole.log(\"IN IF\")\n  // \t\tconsole.log(mySession);\n  // \t\treturn <Navigate to=\"/login\" replace={true} />;\n  // \t}\n\n  // \t  return <Component {...rest}/>;\n  // }\n\n  // return (\n  // \t<SessionContext.Provider value={{mySession, setSession}}>\n  // \t\t<div className=\"App\">\n  // \t\t\t<Navbar/>\n  // \t\t\t<div className=\"content\">\n  // \t\t\t\t<Routes>\n  // \t\t\t\t\t<Route path=\"/login\" element={<Login mySession={mySession} setSession={setSession}/>}/>\n  // \t\t\t\t\t<Route path=\"/top-movies\" element={<ProtectedRoute component={TopMovies}/>}/>\n  // \t\t\t\t\t<Route path=\"/single-movie\" element={<ProtectedRoute component={SingleMovie}/>}/>\n  // \t\t\t\t\t<Route path=\"/single-star\" element={<ProtectedRoute component={SingleStar}/>}/>\n  // \t\t\t\t</Routes>\n  // \t\t\t</div>\n  // \t\t</div>\n  // \t</SessionContext.Provider>\n  // );\n}\n_s(App, \"JBExqPfNWXNee6xLpHCNvI09A7s=\");\n_c = App;\nexport { App, SessionContext };\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","createContext","Axios","Login","TopMovies","Navbar","SingleMovie","SingleStar","Routes","Route","Navigate","useNavigate","SessionContext","App","_s","mySession","setSession","defaults","withCredentials","_c","$RefreshReg$"],"sources":["C:/Users/straw/Desktop/personal/fabflix-remake/front-end/src/App.js"],"sourcesContent":["import { useState, useEffect, createContext } from 'react';\nimport Axios from 'axios';\nimport './App.css';\nimport Login from './components/signin/signin';\nimport TopMovies from './components/top-movies/top-movies';\nimport Navbar from './components/navbar/navbar';\nimport SingleMovie from './components/single-movie/single-movie';\nimport SingleStar from './components/single-star/single-star';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\n\nconst SessionContext = createContext();\n\nfunction App() {\n\tconst [mySession, setSession] = useState({});\n\t// const navigate = useNavigate();\n\n\tAxios.defaults.withCredentials = true;\n\n\t// useEffect(() => {\n    //     Axios.get(\"http://localhost:5000/api/login\")\n\t// \t.then( (res) => {\n\t// \t\tif ( res.data.signedIn ) {\n\t// \t\t\tsetSession(res.data);\n\t// \t\t\t// window.location.href = \"/top-movies\";\n\t// \t\t\tconsole.log(`YOU ARE SIGNED IN WITH ${res.data.user.email}`);\n\t// \t\t} else {\n\t// \t\t\tconsole.log(\"NOT SIGNED IN\");\n\t// \t\t}\n    //     })\n    // }, []);\n\n\t// const ProtectedRoute = ({ component: Component, ...rest }) => {\n\t// \tif (!mySession.signedIn) {\n\t// \t\tconsole.log(\"IN IF\")\n\t// \t\tconsole.log(mySession);\n\t// \t\treturn <Navigate to=\"/login\" replace={true} />;\n\t// \t}\n\t  \n\t// \t  return <Component {...rest}/>;\n\t// }\n\n\t// return (\n\t// \t<SessionContext.Provider value={{mySession, setSession}}>\n\t// \t\t<div className=\"App\">\n\t// \t\t\t<Navbar/>\n\t// \t\t\t<div className=\"content\">\n\t// \t\t\t\t<Routes>\n\t// \t\t\t\t\t<Route path=\"/login\" element={<Login mySession={mySession} setSession={setSession}/>}/>\n\t// \t\t\t\t\t<Route path=\"/top-movies\" element={<ProtectedRoute component={TopMovies}/>}/>\n\t// \t\t\t\t\t<Route path=\"/single-movie\" element={<ProtectedRoute component={SingleMovie}/>}/>\n\t// \t\t\t\t\t<Route path=\"/single-star\" element={<ProtectedRoute component={SingleStar}/>}/>\n\t// \t\t\t\t</Routes>\n\t// \t\t\t</div>\n\t// \t\t</div>\n\t// \t</SessionContext.Provider>\n\t// );\n}\n\nexport {App, SessionContext};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,SAAS,MAAM,oCAAoC;AAC1D,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,WAAW,MAAM,wCAAwC;AAChE,OAAOC,UAAU,MAAM,sCAAsC;AAC7D,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAEvE,MAAMC,cAAc,gBAAGX,aAAa,CAAC,CAAC;AAEtC,SAASY,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C;;EAEAG,KAAK,CAACe,QAAQ,CAACC,eAAe,GAAG,IAAI;;EAErC;EACG;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACG;EACA;;EAEH;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;AAACJ,EAAA,CA5CQD,GAAG;AAAAM,EAAA,GAAHN,GAAG;AA8CZ,SAAQA,GAAG,EAAED,cAAc;AAAE,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}