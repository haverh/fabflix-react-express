[{"C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\index.js":"1","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\App.js":"3","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\navbar\\navbar.js":"4","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\top-movies\\top-movies.js":"5","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\single-movie\\single-movie.js":"6","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\single-star\\single-star.js":"7","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\signin\\signin.js":"8"},{"size":997,"mtime":1689466429149,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1687385175577,"results":"11","hashOfConfig":"10"},{"size":3123,"mtime":1689479239310,"results":"12","hashOfConfig":"10"},{"size":2253,"mtime":1689480292321,"results":"13","hashOfConfig":"10"},{"size":2894,"mtime":1688689452120,"results":"14","hashOfConfig":"10"},{"size":4371,"mtime":1688355294778,"results":"15","hashOfConfig":"10"},{"size":3268,"mtime":1688432457990,"results":"16","hashOfConfig":"10"},{"size":3090,"mtime":1689466604567,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8sef32",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\index.js",[],[],"C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\App.js",["45","46","47","48"],[],"C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\navbar\\navbar.js",[],[],"C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\top-movies\\top-movies.js",[],[],"C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\single-movie\\single-movie.js",["49"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport './single-movie.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { faStar as farStar } from '@fortawesome/free-regular-svg-icons';\r\n\r\nfunction SingleMovie() {\r\n\r\n    const omdbAPI = \"f6cd5e6f\";\r\n    \r\n    const [movieInfo, setMovieInfo] = useState({});\r\n    const [OMDbInfo, setOMDbInfo] = useState({});\r\n\r\n    const urlParams = new URLSearchParams(useLocation().search);\r\n\r\n    useEffect(() => {\r\n        fetchData(urlParams.get('movieId'));\r\n        fetchOMDb(urlParams.get('movieId'));\r\n    }, [])\r\n\r\n    // Fetch movie data from backend\r\n    const fetchData = async (movieId) => {\r\n        try {\r\n\r\n            const response = await fetch(`http://localhost:5000/api/single-movie?movieId=${movieId}`);\r\n            const jsonData = await response.json();\r\n            // console.log(jsonData)\r\n            setMovieInfo(jsonData);\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n\r\n    // Fetch movie poster from OMDd using API call\r\n    const fetchOMDb = async (movieId) => {\r\n        try {\r\n\r\n            const response = await fetch(`http://www.omdbapi.com/?i=${movieId}&apikey=${omdbAPI}`);\r\n            const jsonData = await response.json();\r\n            // console.log(jsonData)\r\n            let OMDbMovieInfo = {}\r\n            OMDbMovieInfo.plot = jsonData.Plot\r\n            OMDbMovieInfo.poster = jsonData.Poster\r\n            setOMDbInfo(OMDbMovieInfo);\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-content\">\r\n            <h1 className=\"header\">\r\n                <span className=\"movieTitle\">{movieInfo.movieTitle} ({movieInfo.movieYear})</span>\r\n                <span className=\"movieRating\">{movieInfo.movieRating} \r\n                    <span className=\"fa-layers fa-fw\">\r\n                        <FontAwesomeIcon icon={faStar} color=\"#8DBA5E\" size=\"sm\" transform=\"shrink-6\"/>\r\n                        <FontAwesomeIcon icon={farStar} size=\"sm\" />\r\n                    </span>\r\n                </span>\r\n            </h1>\r\n            <div className=\"table-img\">\r\n                <table className=\"table table-striped\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\" >Plot</th>\r\n                            <td>{OMDbInfo.plot} </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\" >Director</th>\r\n                            <td>{movieInfo.movieDirector} </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\" >Genres</th>\r\n                            <td>\r\n                                {movieInfo.movieGenres && movieInfo.movieGenres.map((gObj, gIndex) => (\r\n                                <React.Fragment key={gObj.genreId}>\r\n                                    <Link to=\"#\" className=\"link\">{gObj.genreName}</Link>\r\n                                    {gIndex < movieInfo.movieGenres.length - 1 && ', '}\r\n                                </React.Fragment>\r\n                                ))}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\" >Stars</th>\r\n                            <td>\r\n                                {movieInfo.movieStars && movieInfo.movieStars.map((sObj, sIndex) => (\r\n                                <React.Fragment key={sObj.starId}>\r\n                                    <Link to={`/single-star?starId=${sObj.starId}`} className=\"link\">{sObj.starName}</Link>\r\n                                    {sIndex < movieInfo.movieStars.length - 1 && ', '}\r\n                                </React.Fragment>\r\n                                ))}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                {OMDbInfo.poster !== 'N/A' && <img className=\"image\" src={OMDbInfo.poster} alt=\"Movie Poster\"></img>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleMovie;","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\single-star\\single-star.js",["50"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction SingleStar() {\r\n\r\n    const [starInfo, setStarInfo] = useState({});\r\n\r\n    const urlParams = new URLSearchParams(useLocation().search);\r\n\r\n    useEffect(() => {\r\n        fetchData(urlParams.get('starId'));\r\n    },[urlParams])\r\n\r\n    const fetchData = async (starId) => {\r\n        try {\r\n\r\n            const response = await fetch(`http://localhost:5000/api/single-star?starId=${starId}`);\r\n            const jsonData = await response.json();\r\n            // console.log(jsonData)\r\n            setStarInfo(jsonData);\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"page-content\">\r\n            <h1>{starInfo.starName} ({starInfo.starBirth || 'N/A'})</h1>\r\n            <table className=\"table table-striped\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                    <th scope=\"col\" >Title</th>\r\n                    <th scope=\"col\" >Release Year</th>\r\n                    <th scope=\"col\" >Director</th>\r\n                    <th scope=\"col\" >Genres</th>\r\n                    <th scope=\"col\" >Stars</th>\r\n                    <th scope=\"col\" >Rating</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {starInfo.starMoviesList && starInfo.starMoviesList.map((movieInfo) => (\r\n                        <tr key={movieInfo.movieId}>\r\n                            <td><Link to={`/single-movie?movieId=${movieInfo.movieId}`} className=\"link\">{movieInfo.movieTitle}</Link></td>\r\n                            <td>{movieInfo.movieYear} </td>\r\n                            <td>{movieInfo.movieDirector} </td>\r\n                            <td>\r\n                                {movieInfo.movieGenres.map((gObj, gIndex) => (\r\n                                <React.Fragment key={gObj.genreId}>\r\n                                    <Link to=\"#\" className=\"link\">{gObj.genreName}</Link>\r\n                                    {gIndex < movieInfo.movieGenres.length - 1 && ', '}\r\n                                </React.Fragment>\r\n                                ))}\r\n                            </td>\r\n                            <td>\r\n                                {movieInfo.movieStars && movieInfo.movieStars.map((sObj, sIndex) => (\r\n                                <React.Fragment key={sObj.starId}>\r\n                                    <Link to={`/single-star?starId=${sObj.starId}`} className=\"link\">{sObj.starName}</Link>\r\n                                    {sIndex < movieInfo.movieStars.length - 1 && ', '}\r\n                                </React.Fragment>\r\n                                ))}\r\n                            </td>\r\n                            <td>{movieInfo.movieRating}\r\n                            <FontAwesomeIcon icon={faStar} color=\"#8DBA5E\" size=\"sm\" /></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleStar;","C:\\Users\\straw\\Desktop\\personal\\fabflix-remake\\front-end\\src\\components\\signin\\signin.js",["51"],[],{"ruleId":"52","severity":1,"message":"53","line":1,"column":20,"nodeType":"54","messageId":"55","endLine":1,"endColumn":29},{"ruleId":"52","severity":1,"message":"56","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":9,"column":25,"nodeType":"54","messageId":"55","endLine":9,"endColumn":33},{"ruleId":"52","severity":1,"message":"58","line":9,"column":35,"nodeType":"54","messageId":"55","endLine":9,"endColumn":46},{"ruleId":"59","severity":1,"message":"60","line":22,"column":8,"nodeType":"61","endLine":22,"endColumn":10,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":10,"column":11,"nodeType":"64","endLine":10,"endColumn":64},{"ruleId":"52","severity":1,"message":"53","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Navigate' is defined but never used.","'useNavigate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlParams'. Either include it or remove the dependency array.","ArrayExpression",["65"],"The 'urlParams' object construction makes the dependencies of useEffect Hook (at line 14) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'urlParams' in its own useMemo() Hook.","VariableDeclarator",{"desc":"66","fix":"67"},"Update the dependencies array to be: [urlParams]",{"range":"68","text":"69"},[742,744],"[urlParams]"]